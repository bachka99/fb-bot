from flask import Flask, request
import requests

app = Flask(__name__)

VERIFY_TOKEN = "bachka_token"
PAGE_ACCESS_TOKEN = "EAAZAmrUlytb0BPYg7ucghGA1pNTdrluj3QLKm924bF8yk7DMC02H9rWDRWD55Vl2aQNFNSec5iF7Y7XyPRXYnx58r1PU5gNJgCbejNy2XhWZBJYRa5eIZCFZA8TD4SytUum2bfAidLdgMmCdWZAJk2rGZBm11HZAMi20QqZAv4ksvDRE52Duhpe8tHsRK2MXVtK55uZBVJpqF"

# --- “Æ–Ω–¥—Å—ç–Ω —Ü—ç—Å ---
def send_welcome_message(recipient_id):
    url = "https://graph.facebook.com/v23.0/me/messages"
    params = {"access_token": PAGE_ACCESS_TOKEN}
    headers = {"Content-Type": "application/json"}
    data = {
        "recipient": {"id": recipient_id},
        "message": {
            "text": "–°–∞–π–Ω –±–∞–π–Ω–∞ —É—É üëã –¢–∞ —Å–æ–Ω–∏—Ä—Ö–æ–∂ –±—É–π “Ø–π–ª—á–∏–ª–≥—ç—ç–≥—ç—ç —Å–æ–Ω–≥–æ–Ω–æ —É—É:",
            "quick_replies": [
                {"content_type": "text", "title": "üí∞ “Æ–Ω–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª", "payload": "PRICE_INFO"},
                {"content_type": "text", "title": "üéÅ –ë—ç–ª–≥—ç–Ω–¥ —Ç–æ—Ö–∏—Ä–æ–º–∂—Ç–æ–π", "payload": "GIFT"},
                {"content_type": "text", "title": "üïí –¶–∞–≥–∏–π–Ω —Ö—É–≤–∞–∞—Ä—å", "payload": "SCHEDULE"},
                {"content_type": "text", "title": "üìç –•–∞—è–≥, —É—Ç–∞—Å", "payload": "CONTACT"}
            ]
        }
    }
    requests.post(url, params=params, headers=headers, json=data)

# --- “Æ–Ω–∏–π–Ω –º—ç–¥—ç—ç–ª—ç–ª ---
def send_price_info(recipient_id):
    url = "https://graph.facebook.com/v23.0/me/messages"
    params = {"access_token": PAGE_ACCESS_TOKEN}
    headers = {"Content-Type": "application/json"}
    data = {
        "recipient": {"id": recipient_id},
        "message": {
            "text": (
                "–ú–∞–Ω–∞–π –¥—ç–ª–≥“Ø“Ø—Ä –¥—ç—ç—Ä 60 –≥–∞—Ä—É–π –Ω—ç—Ä —Ç”©—Ä–ª–∏–π–Ω –±–æ–ª–æ—Ä —ç–¥–ª—ç–ª“Ø“Ø–¥ —Ö—É–¥–∞–ª–¥–∞–∞–ª–∞–≥–¥–∞–∂ –±–∞–π–Ω–∞ ‚úÖ\n\n"
                "“Æ–Ω–∏–π–Ω –¥“Ø–Ω –Ω—å —Ö—ç–ª–±—ç—Ä —Ö—ç–º–∂—ç—ç–Ω—ç—ç—Å—ç—ç —Ö–∞–º–∞–∞—Ä–∞–∞–¥ 500 - 9000 –∫—Ä–æ–Ω-–∏–π–Ω —Ö–æ–æ—Ä–æ–Ω–¥ —Ö—É–¥–∞–ª–¥–∞–∞–ª–∞–≥–¥–∞–∂ –±–∞–π–Ω–∞ üí∞\n\n"
                "–î–æ–æ—Ä—Ö –∑–∞–≥–≤–∞—Ä—É—É–¥–∞–∞—Å —Å–æ–Ω–≥–æ–æ–¥ –¥—ç–ª–≥—ç—Ä—ç–Ω–≥“Ø–π “Ø–∑—ç—ç—Ä—ç–π üëá"
            )
        }
    }
    requests.post(url, params=params, headers=headers, json=data)

    # --- –ñ–∏—à—ç—ç –∑–∞–≥–≤–∞—Ä—É—É–¥ (carousel) ---
    carousel = {
        "recipient": {"id": recipient_id},
        "message": {
            "attachment": {
                "type": "template",
                "payload": {
                    "template_type": "generic",
                    "elements": [
                        {
                            "title": "–í–∏—Å–∫–∏ —Å–µ—Ç",
                            "image_url": "https://www.facebook.com/photo.php?fbid=122111849876133928&set=pb.61554017856554.-2207520000&type=3",
                            "subtitle": "“Æ–Ω—ç: 2500 –∫—Ä–æ–Ω",
                            "buttons": [
                                {"type": "postback", "title": "üìç –•–∞—è–≥, —É—Ç–∞—Å", "payload": "CONTACT"}
                            ]
                        },
                        {
                            "title": "–®–∞–º–ø–∞–Ω—Å–∫–∏–π–Ω —Ö—É–Ω–¥–∞–≥–∞",
                            "image_url": "https://www.facebook.com/photo.php?fbid=122111997602133928&set=pb.61554017856554.-2207520000&type=3",
                            "subtitle": "“Æ–Ω—ç: 1500 –∫—Ä–æ–Ω",
                            "buttons": [
                                {"type": "postback", "title": "üìç –•–∞—è–≥, —É—Ç–∞—Å", "payload": "CONTACT"}
                            ]
                        },
                        {
                            "title": "–ß–∏—Ö—Ä–∏–π–Ω —Ç–∞–≤–∞–≥",
                            "image_url": "https://www.facebook.com/photo.php?fbid=122112045140133928&set=pb.61554017856554.-2207520000&type=3",
                            "subtitle": "“Æ–Ω—ç: 1600 –∫—Ä–æ–Ω",
                            "buttons": [
                                {"type": "postback", "title": "üìç –•–∞—è–≥, —É—Ç–∞—Å", "payload": "CONTACT"}
                            ]
                        }
                    ]
                }
            }
        }
    }
    requests.post(url, params=params, headers=headers, json=carousel)

# --- –ë—ç–ª–≥—ç–Ω–¥ —Ç–æ—Ö–∏—Ä–æ–º–∂—Ç–æ–π ---
def send_gift_info(recipient_id):
    send_message(recipient_id, "üéÅ –ú–∞–Ω–∞–π –±–æ–ª–æ—Ä —ç–¥–ª—ç–ª“Ø“Ø–¥ –±—ç–ª—ç–≥—Ç —Ö–∞–º–≥–∏–π–Ω —Ç–æ—Ö–∏—Ä–æ–º–∂—Ç–æ–π ‚ú®")

# --- –¶–∞–≥–∏–π–Ω —Ö—É–≤–∞–∞—Ä—å ---
def send_schedule(recipient_id):
    url = "https://graph.facebook.com/v23.0/me/messages"
    params = {"access_token": PAGE_ACCESS_TOKEN}
    headers = {"Content-Type": "application/json"}
    data = {
        "recipient": {"id": recipient_id},
        "message": {
            "attachment": {
                "type": "image",
                "payload": {
                    "url": "https://www.facebook.com/photo/?fbid=122236977290133928&set=a.122101765010133928",                    "is_reusable": True
                }
            }
        }
    }
    requests.post(url, params=params, headers=headers, json=data)

# --- –•–∞—è–≥, —É—Ç–∞—Å ---
def send_contact_info(recipient_id):
    send_message(
        recipient_id,
        "üìç –•–∞—è–≥: ƒåesk√° 96, 434 01 Most\nüìû –£—Ç–∞—Å: 777 593 594\n\n–¢–∞ –±–∏–¥—ç–Ω—Ç—ç–π —Ö–æ–ª–±–æ–≥–¥–æ–æ—Ä–æ–π üòä"
    )

# --- –ï—Ä–¥–∏–π–Ω –º–µ—Å—Å–µ–∂ –∏–ª–≥—ç—ç—Ö —Ñ—É–Ω–∫—Ü ---
def send_message(recipient_id, message_text):
    url = "https://graph.facebook.com/v23.0/me/messages"
    params = {"access_token": PAGE_ACCESS_TOKEN}
    headers = {"Content-Type": "application/json"}
    data = {
        "recipient": {"id": recipient_id},
        "message": {"text": message_text}
    }
    requests.post(url, params=params, headers=headers, json=data)

# --- Flask webhook ---
@app.route("/", methods=["GET"])
def home():
    return "Server is running!", 200

@app.route("/webhook", methods=["GET", "POST"])
def webhook():
    if request.method == "GET":
        token = request.args.get("hub.verify_token")
        challenge = request.args.get("hub.challenge")
        if token == VERIFY_TOKEN:
            return challenge, 200
        else:
            return "Invalid verification token", 403

    if request.method == "POST":
        data = request.json
        if "entry" in data:
            for entry in data["entry"]:
                if "messaging" in entry:
                    for msg in entry["messaging"]:
                        sender_id = msg["sender"]["id"]

                        if "message" in msg and "text" in msg["message"]:
                            text = msg["message"]["text"].lower()

                            if text in ["hi", "hello", "—Å–∞–π–Ω —É—É", "—Å–∞–π–Ω –±–∞–π–Ω–∞ —É—É"]:
                                send_welcome_message(sender_id)

                            elif "“Ø–Ω—ç" in text:
                                send_price_info(sender_id)

                            elif "–±—ç–ª—ç–≥" in text:
                                send_gift_info(sender_id)

                            elif "—Ü–∞–≥" in text:
                                send_schedule(sender_id)

                            elif "—Ö–∞—è–≥" in text or "—É—Ç–∞—Å" in text:
                                send_contact_info(sender_id)

                            else:
                                send_message(sender_id, "ü§ñ –°–æ–Ω–≥–æ—Å–æ–Ω “Ø–π–ª—á–∏–ª–≥—ç—ç–≥—ç—ç “Ø–Ω–¥—Å—ç–Ω —Ü—ç—Å–Ω—ç—ç—Å –¥–∞—Ä–Ω–∞ —É—É.")
        return "EVENT_RECEIVED", 200


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
